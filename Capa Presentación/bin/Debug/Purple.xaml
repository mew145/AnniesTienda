<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
  <SolidColorBrush x:Key="Item.MouseOver.Background">#1F26A0DA</SolidColorBrush>
  <SolidColorBrush x:Key="OptionMark.Static.Glyph">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="TextBox.MouseOver.Border">#FF836FA9</SolidColorBrush>
  <SolidColorBrush x:Key="Item.SelectedInactive.Border">#FFDADADA</SolidColorBrush>
  <SolidColorBrush x:Key="TextBox.Focus.Border">#FF836FA9</SolidColorBrush>
  <Style TargetType="IFrameworkInputElement" x:Key="FocusVisual">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="DataGrid" x:Key="DataGridStyle">
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ItemsControl.IsGrouping">
            <Condition.Value>
              <s:Boolean>True</s:Boolean>
            </Condition.Value>
          </Condition>
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
            <Condition.Value>
              <s:Boolean>False</s:Boolean>
            </Condition.Value>
          </Condition>
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll">
          <Setter.Value>
            <s:Boolean>False</s:Boolean>
          </Setter.Value>
        </Setter>
      </MultiTrigger>
    </Style.Triggers>
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <SolidColorBrush>#FF836FA9</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="DataGrid.RowBackground">
      <Setter.Value>
        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="DataGrid.HorizontalGridLinesBrush">
      <Setter.Value>
        <SolidColorBrush>#FF836FA9</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="DataGrid.RowDetailsVisibilityMode">
      <Setter.Value>
        <x:Static Member="DataGridRowDetailsVisibilityMode.VisibleWhenSelected" />
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.CanContentScroll">
      <Setter.Value>
        <s:Boolean>True</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.PanningMode">
      <Setter.Value>
        <x:Static Member="PanningMode.Both" />
      </Setter.Value>
    </Setter>
    <Setter Property="Stylus.IsFlicksEnabled">
      <Setter.Value>
        <s:Boolean>False</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="DataGrid">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" CornerRadius="0,0,10,10" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
            <ScrollViewer Name="DG_ScrollViewer" Focusable="False">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="ScrollViewer">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Button Command="SelectAll" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=DataGrid, ResourceId=DataGridSelectAllButtonStyle}}" Width="Auto" Visibility="Visible" Focusable="False" />
                    <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter" Visibility="Visible" Grid.Column="1" />
                    <ScrollContentPresenter CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" />
                    <ScrollBar Orientation="Vertical" Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Value="0" Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Grid.Column="2" Grid.Row="1" />
                    <Grid Grid.Column="1" Grid.Row="2">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ScrollBar Orientation="Horizontal" Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Value="0" Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Grid.Column="1" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background">#00FFFFFF</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph">#FFADD8E6</SolidColorBrush>
  <Style TargetType="DataGridCell" x:Key="{x:Type DataGridCell}">
    <Style.Triggers>
      <Trigger Property="DataGridCell.IsSelected">
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF836FA9</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>True</s:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver">
        <Setter Property="Panel.Background">
          <Setter.Value>
            <SolidColorBrush>#FF836FA9</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>True</s:Boolean>
        </Trigger.Value>
      </Trigger>
    </Style.Triggers>
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Block.TextAlignment">
      <Setter.Value>
        <x:Static Member="TextAlignment.Center" />
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ComboBox.Disabled.Background">#FFF0F0F0</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Static.Editable.Border">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border">#00FFFFFF</SolidColorBrush>
  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="ComboBox.MouseOver.Editable.Button.Background">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFB39DDB" Offset="0" />
      <GradientStop Color="#FFB39DDB" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="OptionMark.Pressed.Glyph">#FF212121</SolidColorBrush>
  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="ComboBox.Pressed.Background">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFB39DDB" Offset="0" />
      <GradientStop Color="#FFB39DDB" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style TargetType="TextBox" x:Key="TextBoxStyle">
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled">
            <Condition.Value>
              <s:Boolean>True</s:Boolean>
            </Condition.Value>
          </Condition>
          <Condition Property="TextBoxBase.IsSelectionActive">
            <Condition.Value>
              <s:Boolean>False</s:Boolean>
            </Condition.Value>
          </Condition>
        </MultiTrigger.Conditions>
        <Setter Property="TextBoxBase.SelectionBrush">
          <Setter.Value>
            <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" />
          </Setter.Value>
        </Setter>
      </MultiTrigger>
    </Style.Triggers>
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="KeyboardNavigation.TabNavigation">
      <Setter.Value>
        <x:Static Member="KeyboardNavigationMode.None" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment">
      <Setter.Value>
        <x:Static Member="HorizontalAlignment.Left" />
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <x:Null />
      </Setter.Value>
    </Setter>
    <Setter Property="UIElement.AllowDrop">
      <Setter.Value>
        <s:Boolean>True</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.PanningMode">
      <Setter.Value>
        <x:Static Member="PanningMode.VerticalFirst" />
      </Setter.Value>
    </Setter>
    <Setter Property="Stylus.IsFlicksEnabled">
      <Setter.Value>
        <s:Boolean>False</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="10,10,10,10" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
            <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Name="PART_ContentHost" Focusable="False" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled">
              <Setter Property="UIElement.Opacity" TargetName="border">
                <Setter.Value>
                  <s:Double>0.56</s:Double>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver">
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FF836FA9</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused">
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FF836FA9</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Button" x:Key="ButtonPrincipalStyle">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="IFrameworkInputElement">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.FontSize">
      <Setter.Value>
        <s:Double>15</s:Double>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment">
      <Setter.Value>
        <x:Static Member="HorizontalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment">
      <Setter.Value>
        <x:Static Member="VerticalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Padding">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="10,10,10,10" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted">
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver">
              <Setter Property="Panel.Background" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFF48FB1</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFF48FB1</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed">
              <Setter Property="Panel.Background" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
              <Setter Property="Panel.Background" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground" TargetName="contentPresenter">
                <Setter.Value>
                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="TextBox" x:Key="Textbox2Style">
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled">
            <Condition.Value>
              <s:Boolean>True</s:Boolean>
            </Condition.Value>
          </Condition>
          <Condition Property="TextBoxBase.IsSelectionActive">
            <Condition.Value>
              <s:Boolean>False</s:Boolean>
            </Condition.Value>
          </Condition>
        </MultiTrigger.Conditions>
        <Setter Property="TextBoxBase.SelectionBrush">
          <Setter.Value>
            <DynamicResource ResourceKey="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" />
          </Setter.Value>
        </Setter>
      </MultiTrigger>
    </Style.Triggers>
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="KeyboardNavigation.TabNavigation">
      <Setter.Value>
        <x:Static Member="KeyboardNavigationMode.None" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment">
      <Setter.Value>
        <x:Static Member="HorizontalAlignment.Left" />
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <x:Null />
      </Setter.Value>
    </Setter>
    <Setter Property="UIElement.AllowDrop">
      <Setter.Value>
        <s:Boolean>True</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.PanningMode">
      <Setter.Value>
        <x:Static Member="PanningMode.VerticalFirst" />
      </Setter.Value>
    </Setter>
    <Setter Property="Stylus.IsFlicksEnabled">
      <Setter.Value>
        <s:Boolean>False</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="10,10,10,10" BorderBrush="#FFB39DDB" Background="#FFFFFFFF" Name="border" SnapsToDevicePixels="True">
            <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Name="PART_ContentHost" Focusable="False" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled">
              <Setter Property="UIElement.Opacity" TargetName="border">
                <Setter.Value>
                  <s:Double>0.56</s:Double>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver">
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FF836FA9</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused">
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FF836FA9</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Pressed.Glyph">#FFB39DDB</SolidColorBrush>
  <Style TargetType="ListViewItem" x:Key="ListViewStyle">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="UIElement.SnapsToDevicePixels">
      <Setter.Value>
        <s:Boolean>True</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Padding">
      <Setter.Value>
        <Thickness>4,1,4,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment">
      <Setter.Value>
        <Binding Path="HorizontalContentAlignment" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment">
      <Setter.Value>
        <Binding Path="VerticalContentAlignment" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=1}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="IFrameworkInputElement">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="ListViewItem">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver">
                  <Condition.Value>
                    <s:Boolean>True</s:Boolean>
                  </Condition.Value>
                </Condition>
              </MultiTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="Bd">
                <Setter.Value>
                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="Bd">
                <Setter.Value>
                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled">
              <Setter Property="TextElement.Foreground" TargetName="Bd">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ComboBox.Static.Border">#FFB39DDB</SolidColorBrush>
  <Style TargetType="Button" x:Key="ButtonSecundarioStyle">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="IFrameworkInputElement">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FF836FA9</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#FF836FA9</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.FontSize">
      <Setter.Value>
        <s:Double>15</s:Double>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment">
      <Setter.Value>
        <x:Static Member="HorizontalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment">
      <Setter.Value>
        <x:Static Member="VerticalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Padding">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="10,10,10,10" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted">
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver">
              <Setter Property="Panel.Background" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FF836FA9</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FF836FA9</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed">
              <Setter Property="Panel.Background" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
              <Setter Property="Panel.Background" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="TextElement.Foreground" TargetName="contentPresenter">
                <Setter.Value>
                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="OptionMark.MouseOver.Background">#FFF3F9FF</SolidColorBrush>
  <Style TargetType="TextBox" x:Key="ComboBoxEditableTextBox">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="FrameworkElement.OverridesDefaultStyle">
      <Setter.Value>
        <s:Boolean>True</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="UIElement.AllowDrop">
      <Setter.Value>
        <s:Boolean>True</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.MinWidth">
      <Setter.Value>
        <s:Double>0</s:Double>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.MinHeight">
      <Setter.Value>
        <s:Double>0</s:Double>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <x:Null />
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.PanningMode">
      <Setter.Value>
        <x:Static Member="PanningMode.VerticalFirst" />
      </Setter.Value>
    </Setter>
    <Setter Property="Stylus.IsFlicksEnabled">
      <Setter.Value>
        <s:Boolean>False</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="#00FFFFFF" Name="PART_ContentHost" Focusable="False" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Item.MouseOver.Border">#A826A0DA</SolidColorBrush>
  <SolidColorBrush x:Key="Item.SelectedActive.Border">#FF26A0DA</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph">#FFB39DDB</SolidColorBrush>
  <Style TargetType="Button" x:Key="ButtonListaStyle">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="IFrameworkInputElement">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment">
      <Setter.Value>
        <x:Static Member="HorizontalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment">
      <Setter.Value>
        <x:Static Member="VerticalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Padding">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted">
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver">
              <Setter Property="Panel.Background" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed">
              <Setter Property="Panel.Background" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="OptionMark.Disabled.Glyph">#FF707070</SolidColorBrush>
  <Style TargetType="Border" x:Key="BackgroundSideBarStyle">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="OptionMark.Static.Border">#FFFFFFFF</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Static.Editable.Background">#FFFFFFFF</SolidColorBrush>
  <SolidColorBrush x:Key="OptionMark.Disabled.Background">#FFE6E6E6</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border">#00FFFFFF</SolidColorBrush>
  <Style TargetType="Button" x:Key="ButtonHeaderStyle">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="IFrameworkInputElement">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment">
      <Setter.Value>
        <x:Static Member="HorizontalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment">
      <Setter.Value>
        <x:Static Member="VerticalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Padding">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="7,7,7,7" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted">
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver">
              <Setter Property="Panel.Background" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed">
              <Setter Property="Panel.Background" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="CheckBox" x:Key="CheckBoxStyle1">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="IFrameworkInputElement">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="CheckBox">
          <Grid Background="#00FFFFFF" Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="checkBoxBorder" Margin="1,1,1,1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
              <Grid Name="markGrid">
                <Path Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z" Stretch="None" Fill="#FFB39DDB" Name="optionMark" Margin="1,1,1,1" Opacity="0" />
                <Rectangle Fill="#FFB39DDB" Name="indeterminateMark" Margin="2,2,2,2" Opacity="0" />
              </Grid>
            </Border>
            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" Grid.Column="1" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent">
              <Setter Property="FrameworkElement.FocusVisualStyle">
                <Setter.Value>
                  <Style TargetType="IFrameworkInputElement">
                    <Style.Resources>
                      <ResourceDictionary />
                    </Style.Resources>
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate>
                          <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="14,0,0,0" SnapsToDevicePixels="True" />
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </Setter.Value>
              </Setter>
              <Setter Property="Control.Padding">
                <Setter.Value>
                  <Thickness>4,-1,0,0</Thickness>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver">
              <Setter Property="Panel.Background" TargetName="checkBoxBorder">
                <Setter.Value>
                  <SolidColorBrush>#FFF3F9FF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="checkBoxBorder">
                <Setter.Value>
                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Shape.Fill" TargetName="optionMark">
                <Setter.Value>
                  <SolidColorBrush>#FFADD8E6</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Shape.Fill" TargetName="indeterminateMark">
                <Setter.Value>
                  <SolidColorBrush>#FFADD8E6</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
              <Setter Property="Panel.Background" TargetName="checkBoxBorder">
                <Setter.Value>
                  <SolidColorBrush>#FFE6E6E6</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="checkBoxBorder">
                <Setter.Value>
                  <SolidColorBrush>#FFBCBCBC</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Shape.Fill" TargetName="optionMark">
                <Setter.Value>
                  <SolidColorBrush>#FF707070</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Shape.Fill" TargetName="indeterminateMark">
                <Setter.Value>
                  <SolidColorBrush>#FF707070</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed">
              <Setter Property="Panel.Background" TargetName="checkBoxBorder">
                <Setter.Value>
                  <SolidColorBrush>#FFD9ECFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="checkBoxBorder">
                <Setter.Value>
                  <SolidColorBrush>#FF3C77DD</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Shape.Fill" TargetName="optionMark">
                <Setter.Value>
                  <SolidColorBrush>#FF212121</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Shape.Fill" TargetName="indeterminateMark">
                <Setter.Value>
                  <SolidColorBrush>#FF212121</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked">
              <Setter Property="UIElement.Opacity" TargetName="optionMark">
                <Setter.Value>
                  <s:Double>1</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="UIElement.Opacity" TargetName="indeterminateMark">
                <Setter.Value>
                  <s:Double>0</s:Double>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked">
              <Setter Property="UIElement.Opacity" TargetName="optionMark">
                <Setter.Value>
                  <s:Double>0</s:Double>
                </Setter.Value>
              </Setter>
              <Setter Property="UIElement.Opacity" TargetName="indeterminateMark">
                <Setter.Value>
                  <s:Double>1</s:Double>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <x:Null />
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="OptionMark.Static.Background">#FFFFFFFF</SolidColorBrush>
  <Style TargetType="Border" x:Key="BackgroundHeaderStyle">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FF836FA9</SolidColorBrush>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ComboBox.MouseOver.Border">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Disabled.Glyph">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Pressed.Border">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background">#FFFFFFFF</SolidColorBrush>
  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="ComboBox.Pressed.Editable.Button.Background">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFB39DDB" Offset="0" />
      <GradientStop Color="#FFB39DDB" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Item.SelectedInactive.Background">#3DDADADA</SolidColorBrush>
  <Style TargetType="ToggleButton" x:Key="ButtonMenuStyle">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="IFrameworkInputElement">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment">
      <Setter.Value>
        <x:Static Member="HorizontalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.VerticalContentAlignment">
      <Setter.Value>
        <x:Static Member="VerticalAlignment.Center" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Padding">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted">
              <Setter Property="Border.BorderBrush" TargetName="border">
                <Setter.Value>
                  <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background">#FFFFFFFF</SolidColorBrush>
  <Style TargetType="IFrameworkInputElement" x:Key="OptionMarkFocusVisual">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="14,0,0,0" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="ComboBoxItem" x:Key="{x:Type ComboBoxItem}">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBoxItem">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" CornerRadius="10,10,10,10" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
            <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ComboBoxItem.IsHighlighted">
              <Setter Property="Panel.Background">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ComboBoxItem.IsHighlighted">
              <Setter Property="TextElement.Foreground">
                <Setter.Value>
                  <SolidColorBrush>#FF000000</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="DataGridColumnHeader" x:Key="{x:Type DataGridColumnHeader}">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.FontWeight">
      <Setter.Value>
        <FontWeight>SemiBold</FontWeight>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.Height">
      <Setter.Value>
        <s:Double>20</s:Double>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.HorizontalContentAlignment">
      <Setter.Value>
        <x:Static Member="HorizontalAlignment.Center" />
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="OptionMark.Disabled.Border">#FFBCBCBC</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Static.Glyph">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background">#00FFFFFF</SolidColorBrush>
  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="ComboBox.MouseOver.Background">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFB39DDB" Offset="0" />
      <GradientStop Color="#FFB39DDB" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <ControlTemplate TargetType="ComboBox" x:Key="ComboBoxEditableTemplate">
    <Grid Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
      </Grid.ColumnDefinitions>
      <Popup IsOpen="False" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Grid.ColumnSpan="2">
        <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="shadow" MinWidth="0" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
          <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="#FFB39DDB" Background="#FFFFFFFF" Name="dropDownBorder">
            <ScrollViewer Name="DropDownScrollViewer">
              <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                  <Rectangle Fill="#FFFFFFFF" Name="opaqueRect" Width="Auto" Height="Auto" />
                </Canvas>
                <ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
              </Grid>
            </ScrollViewer>
          </Border>
        </mwt:SystemDropShadowChrome>
      </Popup>
      <ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" Name="toggleButton" Grid.ColumnSpan="2">
        <ToggleButton.Style>
          <Style TargetType="ToggleButton">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="FrameworkElement.OverridesDefaultStyle">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="KeyboardNavigation.IsTabStop">
              <Setter.Value>
                <s:Boolean>False</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="UIElement.Focusable">
              <Setter.Value>
                <s:Boolean>False</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="ButtonBase.ClickMode">
              <Setter.Value>
                <x:Static Member="ClickMode.Press" />
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="10,10,10,10" BorderBrush="#FFB39DDB" Background="#FFB39DDB" Name="templateRoot" SnapsToDevicePixels="True">
                    <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="#00FFFFFF" Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Margin="0,0,0,0" HorizontalAlignment="Right" SnapsToDevicePixels="True">
                      <Path Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FFB39DDB" Name="arrow" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                  </Border>
                  <ControlTemplate.Triggers>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                        <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Shape.Fill" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFB39DDB" Offset="0" />
                              <GradientStop Color="#FFB39DDB" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="splitBorder">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFB39DDB" Offset="0" />
                              <GradientStop Color="#FFB39DDB" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <Trigger Property="ButtonBase.IsPressed">
                      <Setter Property="Shape.Fill" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFB39DDB" Offset="0" />
                              <GradientStop Color="#FFB39DDB" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="splitBorder">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFB39DDB" Offset="0" />
                              <GradientStop Color="#FFB39DDB" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Shape.Fill" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFF0F0F0</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFD9D9D9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>
      <Border CornerRadius="10,10,10,10" Background="#00FFFFFF" Name="border" Margin="{TemplateBinding Border.BorderThickness}">
        <TextBox IsReadOnly="False" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Name="PART_EditableTextBox" Margin="{TemplateBinding Control.Padding}" xml:space="preserve"><TextBox.Style><Style TargetType="TextBox"><Style.Resources><ResourceDictionary /></Style.Resources><Setter Property="FrameworkElement.OverridesDefaultStyle"><Setter.Value><s:Boolean>True</s:Boolean></Setter.Value></Setter><Setter Property="Panel.Background"><Setter.Value><SolidColorBrush>#FFB39DDB</SolidColorBrush></Setter.Value></Setter><Setter Property="Border.BorderBrush"><Setter.Value><SolidColorBrush>#FFB39DDB</SolidColorBrush></Setter.Value></Setter><Setter Property="UIElement.AllowDrop"><Setter.Value><s:Boolean>True</s:Boolean></Setter.Value></Setter><Setter Property="FrameworkElement.MinWidth"><Setter.Value><s:Double>0</s:Double></Setter.Value></Setter><Setter Property="FrameworkElement.MinHeight"><Setter.Value><s:Double>0</s:Double></Setter.Value></Setter><Setter Property="FrameworkElement.FocusVisualStyle"><Setter.Value><x:Null /></Setter.Value></Setter><Setter Property="ScrollViewer.PanningMode"><Setter.Value><x:Static Member="PanningMode.VerticalFirst" /></Setter.Value></Setter><Setter Property="Stylus.IsFlicksEnabled"><Setter.Value><s:Boolean>False</s:Boolean></Setter.Value></Setter><Setter Property="Control.Template"><Setter.Value><ControlTemplate TargetType="TextBox"><ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="#00FFFFFF" Name="PART_ContentHost" Focusable="False" /></ControlTemplate></Setter.Value></Setter></Style></TextBox.Style></TextBox>
      </Border>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsEnabled">
        <Setter Property="UIElement.Opacity" TargetName="border">
          <Setter.Value>
            <s:Double>0.56</s:Double>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>False</s:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocusWithin">
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>True</s:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
        <Setter Property="FrameworkElement.Margin" TargetName="shadow">
          <Setter.Value>
            <Thickness>0,0,5,5</Thickness>
          </Setter.Value>
        </Setter>
        <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="shadow">
          <Setter.Value>
            <Color>#00FFFFFF</Color>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>True</s:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="ItemsControl.HasItems">
        <Setter Property="FrameworkElement.Height" TargetName="dropDownBorder">
          <Setter.Value>
            <s:Double>95</s:Double>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>False</s:Boolean>
        </Trigger.Value>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ItemsControl.IsGrouping">
            <Condition.Value>
              <s:Boolean>True</s:Boolean>
            </Condition.Value>
          </Condition>
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
            <Condition.Value>
              <s:Boolean>False</s:Boolean>
            </Condition.Value>
          </Condition>
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll">
          <Setter.Value>
            <s:Boolean>False</s:Boolean>
          </Setter.Value>
        </Setter>
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer">
        <Setter Property="Canvas.Top" TargetName="opaqueRect">
          <Setter.Value>
            <Binding Path="VerticalOffset" ElementName="DropDownScrollViewer" />
          </Setter.Value>
        </Setter>
        <Setter Property="Canvas.Left" TargetName="opaqueRect">
          <Setter.Value>
            <Binding Path="HorizontalOffset" ElementName="DropDownScrollViewer" />
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>False</s:Boolean>
        </Trigger.Value>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <SolidColorBrush x:Key="TextBox.Static.Border">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Disabled.Border">#FFD9D9D9</SolidColorBrush>
  <SolidColorBrush x:Key="OptionMark.Pressed.Background">#FFD9ECFF</SolidColorBrush>
  <ControlTemplate TargetType="ComboBox" x:Key="ComboBoxTemplate">
    <Grid Name="templateRoot" SnapsToDevicePixels="True">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
      </Grid.ColumnDefinitions>
      <Popup IsOpen="False" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Margin="1,1,1,1" Grid.ColumnSpan="2">
        <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="shadow" MinWidth="0" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
          <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="#FFB39DDB" Background="#FFFFFFFF" Name="dropDownBorder">
            <ScrollViewer Name="DropDownScrollViewer">
              <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                  <Rectangle Fill="#00FFFFFF" Name="opaqueRect" Width="Auto" Height="Auto" />
                </Canvas>
                <ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
              </Grid>
            </ScrollViewer>
          </Border>
        </mwt:SystemDropShadowChrome>
      </Popup>
      <ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" Name="toggleButton" Grid.ColumnSpan="2">
        <ToggleButton.Style>
          <Style TargetType="ToggleButton">
            <Style.Resources>
              <ResourceDictionary />
            </Style.Resources>
            <Setter Property="FrameworkElement.OverridesDefaultStyle">
              <Setter.Value>
                <s:Boolean>True</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="KeyboardNavigation.IsTabStop">
              <Setter.Value>
                <s:Boolean>False</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="UIElement.Focusable">
              <Setter.Value>
                <s:Boolean>False</s:Boolean>
              </Setter.Value>
            </Setter>
            <Setter Property="ButtonBase.ClickMode">
              <Setter.Value>
                <x:Static Member="ClickMode.Press" />
              </Setter.Value>
            </Setter>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                  <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="10,10,10,10" BorderBrush="#FFB39DDB" Background="#FFB39DDB" Name="templateRoot" SnapsToDevicePixels="True">
                    <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="#00FFFFFF" Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Margin="0,0,0,0" HorizontalAlignment="Right" SnapsToDevicePixels="True">
                      <Path Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FFB39DDB" Name="arrow" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                  </Border>
                  <ControlTemplate.Triggers>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                        <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <Trigger Property="UIElement.IsMouseOver">
                      <Setter Property="Shape.Fill" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFB39DDB" Offset="0" />
                              <GradientStop Color="#FFB39DDB" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="splitBorder">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFB39DDB" Offset="0" />
                              <GradientStop Color="#FFB39DDB" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <Trigger Property="ButtonBase.IsPressed">
                      <Setter Property="Shape.Fill" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFB39DDB" Offset="0" />
                              <GradientStop Color="#FFB39DDB" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="splitBorder">
                        <Setter.Value>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                              <GradientStop Color="#FFB39DDB" Offset="0" />
                              <GradientStop Color="#FFB39DDB" Offset="1" />
                            </LinearGradientBrush.GradientStops>
                          </LinearGradientBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <Trigger Property="UIElement.IsEnabled">
                      <Setter Property="Shape.Fill" TargetName="arrow">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Trigger.Value>
                        <s:Boolean>False</s:Boolean>
                      </Trigger.Value>
                    </Trigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFF0F0F0</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFD9D9D9</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                      <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                        <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                      </MultiDataTrigger.Conditions>
                      <Setter Property="Panel.Background" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                        <Setter.Value>
                          <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Panel.Background" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                        <Setter.Value>
                          <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                        </Setter.Value>
                      </Setter>
                    </MultiDataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>
      <ContentPresenter Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" IsHitTestVisible="False" />
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
        <Setter Property="FrameworkElement.Margin" TargetName="shadow">
          <Setter.Value>
            <Thickness>0,0,5,5</Thickness>
          </Setter.Value>
        </Setter>
        <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="shadow">
          <Setter.Value>
            <Color>#00FFFFFF</Color>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>True</s:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="ItemsControl.HasItems">
        <Setter Property="FrameworkElement.Height" TargetName="dropDownBorder">
          <Setter.Value>
            <s:Double>95</s:Double>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>False</s:Boolean>
        </Trigger.Value>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="ItemsControl.IsGrouping">
            <Condition.Value>
              <s:Boolean>True</s:Boolean>
            </Condition.Value>
          </Condition>
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
            <Condition.Value>
              <s:Boolean>False</s:Boolean>
            </Condition.Value>
          </Condition>
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll">
          <Setter.Value>
            <s:Boolean>False</s:Boolean>
          </Setter.Value>
        </Setter>
      </MultiTrigger>
      <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer">
        <Setter Property="Canvas.Top" TargetName="opaqueRect">
          <Setter.Value>
            <Binding Path="VerticalOffset" ElementName="DropDownScrollViewer" />
          </Setter.Value>
        </Setter>
        <Setter Property="Canvas.Left" TargetName="opaqueRect">
          <Setter.Value>
            <Binding Path="HorizontalOffset" ElementName="DropDownScrollViewer" />
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>False</s:Boolean>
        </Trigger.Value>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background">#FFB39DDB</SolidColorBrush>
  <Style TargetType="ComboBox" x:Key="ComboStyle">
    <Style.Triggers>
      <Trigger Property="ComboBox.IsEditable">
        <Setter Property="KeyboardNavigation.IsTabStop">
          <Setter.Value>
            <s:Boolean>False</s:Boolean>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Padding">
          <Setter.Value>
            <Thickness>2,2,2,2</Thickness>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.HorizontalContentAlignment">
          <Setter.Value>
            <x:Static Member="HorizontalAlignment.Center" />
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
              <Grid Name="templateRoot" SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                  <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup IsOpen="False" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Grid.ColumnSpan="2">
                  <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="shadow" MinWidth="0" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                    <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="#FFB39DDB" Background="#FFFFFFFF" Name="dropDownBorder">
                      <ScrollViewer Name="DropDownScrollViewer">
                        <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                          <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <Rectangle Fill="#FFFFFFFF" Name="opaqueRect" Width="Auto" Height="Auto" />
                          </Canvas>
                          <ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
                        </Grid>
                      </ScrollViewer>
                    </Border>
                  </mwt:SystemDropShadowChrome>
                </Popup>
                <ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" Name="toggleButton" Grid.ColumnSpan="2">
                  <ToggleButton.Style>
                    <Style TargetType="ToggleButton">
                      <Style.Resources>
                        <ResourceDictionary />
                      </Style.Resources>
                      <Setter Property="FrameworkElement.OverridesDefaultStyle">
                        <Setter.Value>
                          <s:Boolean>True</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="KeyboardNavigation.IsTabStop">
                        <Setter.Value>
                          <s:Boolean>False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="UIElement.Focusable">
                        <Setter.Value>
                          <s:Boolean>False</s:Boolean>
                        </Setter.Value>
                      </Setter>
                      <Setter Property="ButtonBase.ClickMode">
                        <Setter.Value>
                          <x:Static Member="ClickMode.Press" />
                        </Setter.Value>
                      </Setter>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="ToggleButton">
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="10,10,10,10" BorderBrush="#FFB39DDB" Background="#FFB39DDB" Name="templateRoot" SnapsToDevicePixels="True">
                              <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="#00FFFFFF" Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Margin="0,0,0,0" HorizontalAlignment="Right" SnapsToDevicePixels="True">
                                <Path Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FFB39DDB" Name="arrow" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                              </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                  <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                  <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                  <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Panel.Background" TargetName="splitBorder">
                                  <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                  <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                              </MultiDataTrigger>
                              <Trigger Property="UIElement.IsMouseOver">
                                <Setter Property="Shape.Fill" TargetName="arrow">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                  <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                  <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                      <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="#FFB39DDB" Offset="0" />
                                        <GradientStop Color="#FFB39DDB" Offset="1" />
                                      </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                              </MultiDataTrigger>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                  <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Panel.Background" TargetName="splitBorder">
                                  <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                      <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="#FFB39DDB" Offset="0" />
                                        <GradientStop Color="#FFB39DDB" Offset="1" />
                                      </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                              </MultiDataTrigger>
                              <Trigger Property="ButtonBase.IsPressed">
                                <Setter Property="Shape.Fill" TargetName="arrow">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                  <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                  <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                      <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="#FFB39DDB" Offset="0" />
                                        <GradientStop Color="#FFB39DDB" Offset="1" />
                                      </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                              </MultiDataTrigger>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                                  <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Panel.Background" TargetName="splitBorder">
                                  <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                      <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="#FFB39DDB" Offset="0" />
                                        <GradientStop Color="#FFB39DDB" Offset="1" />
                                      </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                              </MultiDataTrigger>
                              <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="Shape.Fill" TargetName="arrow">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                  <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                              </Trigger>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                  <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFF0F0F0</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFD9D9D9</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                              </MultiDataTrigger>
                              <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                  <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                                  <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                                  <Setter.Value>
                                    <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Panel.Background" TargetName="splitBorder">
                                  <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                                <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                                  <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                  </Setter.Value>
                                </Setter>
                              </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </ToggleButton.Style>
                </ToggleButton>
                <Border CornerRadius="10,10,10,10" Background="#00FFFFFF" Name="border" Margin="{TemplateBinding Border.BorderThickness}">
                  <TextBox IsReadOnly="False" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Name="PART_EditableTextBox" Margin="{TemplateBinding Control.Padding}" xml:space="preserve"><TextBox.Style><Style TargetType="TextBox"><Style.Resources><ResourceDictionary /></Style.Resources><Setter Property="FrameworkElement.OverridesDefaultStyle"><Setter.Value><s:Boolean>True</s:Boolean></Setter.Value></Setter><Setter Property="Panel.Background"><Setter.Value><SolidColorBrush>#FFB39DDB</SolidColorBrush></Setter.Value></Setter><Setter Property="Border.BorderBrush"><Setter.Value><SolidColorBrush>#FFB39DDB</SolidColorBrush></Setter.Value></Setter><Setter Property="UIElement.AllowDrop"><Setter.Value><s:Boolean>True</s:Boolean></Setter.Value></Setter><Setter Property="FrameworkElement.MinWidth"><Setter.Value><s:Double>0</s:Double></Setter.Value></Setter><Setter Property="FrameworkElement.MinHeight"><Setter.Value><s:Double>0</s:Double></Setter.Value></Setter><Setter Property="FrameworkElement.FocusVisualStyle"><Setter.Value><x:Null /></Setter.Value></Setter><Setter Property="ScrollViewer.PanningMode"><Setter.Value><x:Static Member="PanningMode.VerticalFirst" /></Setter.Value></Setter><Setter Property="Stylus.IsFlicksEnabled"><Setter.Value><s:Boolean>False</s:Boolean></Setter.Value></Setter><Setter Property="Control.Template"><Setter.Value><ControlTemplate TargetType="TextBox"><ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="#00FFFFFF" Name="PART_ContentHost" Focusable="False" /></ControlTemplate></Setter.Value></Setter></Style></TextBox.Style></TextBox>
                </Border>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled">
                  <Setter Property="UIElement.Opacity" TargetName="border">
                    <Setter.Value>
                      <s:Double>0.56</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocusWithin">
                  <Setter Property="TextElement.Foreground">
                    <Setter.Value>
                      <SolidColorBrush>#FF000000</SolidColorBrush>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
                  <Setter Property="FrameworkElement.Margin" TargetName="shadow">
                    <Setter.Value>
                      <Thickness>0,0,5,5</Thickness>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="shadow">
                    <Setter.Value>
                      <Color>#00FFFFFF</Color>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <Trigger Property="ItemsControl.HasItems">
                  <Setter Property="FrameworkElement.Height" TargetName="dropDownBorder">
                    <Setter.Value>
                      <s:Double>95</s:Double>
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="ItemsControl.IsGrouping">
                      <Condition.Value>
                        <s:Boolean>True</s:Boolean>
                      </Condition.Value>
                    </Condition>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
                      <Condition.Value>
                        <s:Boolean>False</s:Boolean>
                      </Condition.Value>
                    </Condition>
                  </MultiTrigger.Conditions>
                  <Setter Property="ScrollViewer.CanContentScroll">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer">
                  <Setter Property="Canvas.Top" TargetName="opaqueRect">
                    <Setter.Value>
                      <Binding Path="VerticalOffset" ElementName="DropDownScrollViewer" />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Canvas.Left" TargetName="opaqueRect">
                    <Setter.Value>
                      <Binding Path="HorizontalOffset" ElementName="DropDownScrollViewer" />
                    </Setter.Value>
                  </Setter>
                  <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                  </Trigger.Value>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <s:Boolean>True</s:Boolean>
        </Trigger.Value>
      </Trigger>
    </Style.Triggers>
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="FrameworkElement.FocusVisualStyle">
      <Setter.Value>
        <Style TargetType="IFrameworkInputElement">
          <Style.Resources>
            <ResourceDictionary />
          </Style.Resources>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate>
                <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </Setter.Value>
    </Setter>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderBrush">
      <Setter.Value>
        <SolidColorBrush>#FFB39DDB</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="TextElement.Foreground">
      <Setter.Value>
        <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
    <Setter Property="Border.BorderThickness">
      <Setter.Value>
        <Thickness>1,1,1,1</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility">
      <Setter.Value>
        <x:Static Member="ScrollBarVisibility.Auto" />
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility">
      <Setter.Value>
        <x:Static Member="ScrollBarVisibility.Auto" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Padding">
      <Setter.Value>
        <Thickness>6,3,5,3</Thickness>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.CanContentScroll">
      <Setter.Value>
        <s:Boolean>True</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="ScrollViewer.PanningMode">
      <Setter.Value>
        <x:Static Member="PanningMode.Both" />
      </Setter.Value>
    </Setter>
    <Setter Property="Stylus.IsFlicksEnabled">
      <Setter.Value>
        <s:Boolean>False</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="ComboBox">
          <Grid Name="templateRoot" SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            </Grid.ColumnDefinitions>
            <Popup IsOpen="False" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Margin="1,1,1,1" Grid.ColumnSpan="2">
              <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="shadow" MinWidth="0" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="#FFB39DDB" Background="#FFFFFFFF" Name="dropDownBorder">
                  <ScrollViewer Name="DropDownScrollViewer">
                    <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                      <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Rectangle Fill="#00FFFFFF" Name="opaqueRect" Width="Auto" Height="Auto" />
                      </Canvas>
                      <ItemsPresenter Name="ItemsPresenter" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
                    </Grid>
                  </ScrollViewer>
                </Border>
              </mwt:SystemDropShadowChrome>
            </Popup>
            <ToggleButton IsChecked="False" BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}" Name="toggleButton" Grid.ColumnSpan="2">
              <ToggleButton.Style>
                <Style TargetType="ToggleButton">
                  <Style.Resources>
                    <ResourceDictionary />
                  </Style.Resources>
                  <Setter Property="FrameworkElement.OverridesDefaultStyle">
                    <Setter.Value>
                      <s:Boolean>True</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="KeyboardNavigation.IsTabStop">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="UIElement.Focusable">
                    <Setter.Value>
                      <s:Boolean>False</s:Boolean>
                    </Setter.Value>
                  </Setter>
                  <Setter Property="ButtonBase.ClickMode">
                    <Setter.Value>
                      <x:Static Member="ClickMode.Press" />
                    </Setter.Value>
                  </Setter>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="ToggleButton">
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="10,10,10,10" BorderBrush="#FFB39DDB" Background="#FFB39DDB" Name="templateRoot" SnapsToDevicePixels="True">
                          <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="#00FFFFFF" Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Margin="0,0,0,0" HorizontalAlignment="Right" SnapsToDevicePixels="True">
                            <Path Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FFB39DDB" Name="arrow" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                          </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                          <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                              <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                              <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                              <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="splitBorder">
                              <Setter.Value>
                                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                              <Setter.Value>
                                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                          </MultiDataTrigger>
                          <Trigger Property="UIElement.IsMouseOver">
                            <Setter Property="Shape.Fill" TargetName="arrow">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                              <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="templateRoot">
                              <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                  <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FFB39DDB" Offset="0" />
                                    <GradientStop Color="#FFB39DDB" Offset="1" />
                                  </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                          </MultiDataTrigger>
                          <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                              <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="splitBorder">
                              <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                  <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FFB39DDB" Offset="0" />
                                    <GradientStop Color="#FFB39DDB" Offset="1" />
                                  </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                          </MultiDataTrigger>
                          <Trigger Property="ButtonBase.IsPressed">
                            <Setter Property="Shape.Fill" TargetName="arrow">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                              <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="templateRoot">
                              <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                  <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FFB39DDB" Offset="0" />
                                    <GradientStop Color="#FFB39DDB" Offset="1" />
                                  </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                          </MultiDataTrigger>
                          <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                              <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="splitBorder">
                              <Setter.Value>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                  <LinearGradientBrush.GradientStops>
                                    <GradientStop Color="#FFB39DDB" Offset="0" />
                                    <GradientStop Color="#FFB39DDB" Offset="1" />
                                  </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                          </MultiDataTrigger>
                          <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="Shape.Fill" TargetName="arrow">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                              <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                          </Trigger>
                          <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                              <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFF0F0F0</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFD9D9D9</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                          </MultiDataTrigger>
                          <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                              <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.Background" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                              <Setter.Value>
                                <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="splitBorder">
                              <Setter.Value>
                                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                              <Setter.Value>
                                <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                              </Setter.Value>
                            </Setter>
                          </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Style>
              </ToggleButton.Style>
            </ToggleButton>
            <ContentPresenter Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" IsHitTestVisible="False" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
              <Setter Property="FrameworkElement.Margin" TargetName="shadow">
                <Setter.Value>
                  <Thickness>0,0,5,5</Thickness>
                </Setter.Value>
              </Setter>
              <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="shadow">
                <Setter.Value>
                  <Color>#00FFFFFF</Color>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems">
              <Setter Property="FrameworkElement.Height" TargetName="dropDownBorder">
                <Setter.Value>
                  <s:Double>95</s:Double>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ItemsControl.IsGrouping">
                  <Condition.Value>
                    <s:Boolean>True</s:Boolean>
                  </Condition.Value>
                </Condition>
                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping">
                  <Condition.Value>
                    <s:Boolean>False</s:Boolean>
                  </Condition.Value>
                </Condition>
              </MultiTrigger.Conditions>
              <Setter Property="ScrollViewer.CanContentScroll">
                <Setter.Value>
                  <s:Boolean>False</s:Boolean>
                </Setter.Value>
              </Setter>
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer">
              <Setter Property="Canvas.Top" TargetName="opaqueRect">
                <Setter.Value>
                  <Binding Path="VerticalOffset" ElementName="DropDownScrollViewer" />
                </Setter.Value>
              </Setter>
              <Setter Property="Canvas.Left" TargetName="opaqueRect">
                <Setter.Value>
                  <Binding Path="HorizontalOffset" ElementName="DropDownScrollViewer" />
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="OptionMark.MouseOver.Border">#FFFFFFFF</SolidColorBrush>
  <Style TargetType="ToggleButton" x:Key="ComboBoxToggleButton">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="FrameworkElement.OverridesDefaultStyle">
      <Setter.Value>
        <s:Boolean>True</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="KeyboardNavigation.IsTabStop">
      <Setter.Value>
        <s:Boolean>False</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="UIElement.Focusable">
      <Setter.Value>
        <s:Boolean>False</s:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="ButtonBase.ClickMode">
      <Setter.Value>
        <x:Static Member="ClickMode.Press" />
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="10,10,10,10" BorderBrush="#FFB39DDB" Background="#FFB39DDB" Name="templateRoot" SnapsToDevicePixels="True">
            <Border BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" BorderBrush="#00FFFFFF" Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Margin="0,0,0,0" HorizontalAlignment="Right" SnapsToDevicePixels="True">
              <Path Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="#FFB39DDB" Name="arrow" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background" TargetName="splitBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver">
              <Setter Property="Shape.Fill" TargetName="arrow">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="templateRoot">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#FFB39DDB" Offset="0" />
                      <GradientStop Color="#FFB39DDB" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background" TargetName="splitBorder">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#FFB39DDB" Offset="0" />
                      <GradientStop Color="#FFB39DDB" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <Trigger Property="ButtonBase.IsPressed">
              <Setter Property="Shape.Fill" TargetName="arrow">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>True</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="templateRoot">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#FFB39DDB" Offset="0" />
                      <GradientStop Color="#FFB39DDB" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true" />
                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFFFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background" TargetName="splitBorder">
                <Setter.Value>
                  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                      <GradientStop Color="#FFB39DDB" Offset="0" />
                      <GradientStop Color="#FFB39DDB" Offset="1" />
                    </LinearGradientBrush.GradientStops>
                  </LinearGradientBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsEnabled">
              <Setter Property="Shape.Fill" TargetName="arrow">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Trigger.Value>
                <s:Boolean>False</s:Boolean>
              </Trigger.Value>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="false" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFF0F0F0</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFD9D9D9</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false" />
                <Condition Binding="{Binding Path=IsEditable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox, AncestorLevel=1}}" Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter Property="Panel.Background" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="templateRoot">
                <Setter.Value>
                  <SolidColorBrush>#FFB39DDB</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Panel.Background" TargetName="splitBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
              <Setter Property="Border.BorderBrush" TargetName="splitBorder">
                <Setter.Value>
                  <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                </Setter.Value>
              </Setter>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" x:Key="ComboBox.Static.Background">
    <LinearGradientBrush.GradientStops>
      <GradientStop Color="#FFFFFFFF" Offset="0" />
      <GradientStop Color="#FFFFFFFF" Offset="1" />
    </LinearGradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="OptionMark.Pressed.Border">#FF3C77DD</SolidColorBrush>
  <Style TargetType="IFrameworkInputElement" x:Key="FocusVisual1">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="Border" x:Key="BackgroundContenidoStyle">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="Panel.Background">
      <Setter.Value>
        <SolidColorBrush>#FFE6CEFF</SolidColorBrush>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="Item.SelectedActive.Background">#3D26A0DA</SolidColorBrush>
  <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border">#FFB39DDB</SolidColorBrush>
  <SolidColorBrush x:Key="TextBox.Static.Background">#00FFFFFF</SolidColorBrush>
</ResourceDictionary>